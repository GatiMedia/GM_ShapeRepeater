Group {
 name GM_ShapeRepeater
 selected true
 xpos 2710
 ypos -394
 addUserKnob {20 User}
 addUserKnob {26 shape l "<b>S H A P E"}
 addUserKnob {41 position l Position T Flare.position}
 addUserKnob {41 size_mult l "Size " T Flare.size_mult}
 addUserKnob {41 anamorph l Anamorph T Flare.anamorph}
 addUserKnob {41 corners l Points T Flare.corners}
 addUserKnob {41 flattening l "Edge Flattening" T Flare.flattening}
 addUserKnob {41 sharpness l "Corner Sharpness" T Flare.sharpness}
 addUserKnob {41 corners_angle l Angle T Flare.corners_angle}
 addUserKnob {41 falloff l Falloff T proxy1.falloff}
 addUserKnob {41 multiply l Color T Grade.multiply}
 addUserKnob {26 rep1 l "<b>R E P E A T E R"}
 addUserKnob {41 copy1 l Copies1 T PROXY_MAIN1.copy1}
 addUserKnob {6 apply_on_copy1 l "Apply Transform on Original Shape" +STARTLINE}
 apply_on_copy1 true
 addUserKnob {41 translate1 T Trans_COPY1_proxy.translate1}
 addUserKnob {41 rotate1 T Trans_COPY1_proxy.rotate1}
 addUserKnob {41 scale1 T Trans_COPY1_proxy.scale1}
 addUserKnob {41 skewX1 T Trans_COPY1_proxy.skewX1}
 addUserKnob {41 skewY1 T Trans_COPY1_proxy.skewY1}
 addUserKnob {41 skeworder1 T Trans_COPY1_proxy.skeworder1}
 addUserKnob {41 center1 l center T Trans_COPY1_proxy.center1}
 addUserKnob {41 invert1 T Trans_COPY1_proxy.invert1}
 addUserKnob {41 filter1 T Trans_COPY1_proxy.filter1}
 addUserKnob {26 "" +STARTLINE}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "<center><font color=red>DON`T TOUCH\nstatic"
  note_font "Verdana Bold"
  note_font_size 42
  xpos 738
  ypos 63
  bdwidth 285
  bdheight 305
 }
 NoOp {
  inputs 0
  name PROXY_MAIN1
  knobChanged "\nm = nuke.thisNode()\nkc = nuke.thisKnob()\n\nif kc.name() in \[\"copy1\"]:\n\n    for n in nuke.allNodes():\n        if \"static\" not in n\['label'].getValue():\n            nuke.delete(n)\n\n    \n    iRep = m.knob('copy1').getValue()\n    iRepeats = int(iRep)-1\n    bfirstLoop = True\n    \n    # Main Transform for Copy1\n    w = nuke.toNode('Trans_COPY1')\n    \n    # Last Merge connected to this\n    b = nuke.toNode('COPIES1_end')\n    \n    # Dot would be connected to this and allows toggle between original and modified source \n    s = nuke.toNode('Switch1')\n    \n    nDot = nuke.nodes.Dot()\n    nDot.setInput(0, s)\n    \n    if (iRepeats+1) >= 2: \n    \n        for i in range(iRepeats):\n            CTrans = nuke.nodes.Transform(name = \"t\" + str(i))\n            CTrans.knob('translate').setExpression('Trans_COPY1.translate')\n            CTrans.knob('rotate').setExpression('Trans_COPY1.rotate')\n            CTrans.knob('scale').setExpression('Trans_COPY1.scale')\n            CTrans.knob('skewX').setExpression('Trans_COPY1.skewX')\n            CTrans.knob('skewY').setExpression('Trans_COPY1.skewY')\n            CTrans.knob('skew_order').setExpression('Trans_COPY1.skew_order')\n            CTrans.knob('center').setExpression('Trans_COPY1.center')\n            CTrans.knob('invert_matrix').setExpression('Trans_COPY1.invert_matrix')\n            CTrans.knob('filter').setExpression('Trans_COPY1.filter')\n            nMerge = nuke.nodes.Merge2(name = \"m\" + str(i))\n            nMerge.knob('also_merge').setValue('all')\n            nMerge.setInput(1, CTrans)\n            \n            if bfirstLoop:\n                bfirstLoop = False\n                CTrans.setInput(0, nDot)\n                nMerge.setInput(0, nDot)\n            else:\n                CTrans.setInput(0, nPrevMerge)\n                nMerge.setInput(0, nPrevMerge)\n        \n            nPrevMerge = nMerge\n        \n        MNum = int(iRepeats) - 1\n        \n        p = nuke.toNode(\"m\" + str(MNum))\n        \n        b.setInput(0, p)\n    else:\n        b.setInput(0, nDot)\n\n"
  label static
  xpos 840
  ypos 248
  addUserKnob {20 User}
  addUserKnob {3 copy1 l Copies1}
  copy1 1
 }
 NoOp {
  inputs 0
  name proxy1
  label static
  xpos 620
  ypos 248
  addUserKnob {20 User}
  addUserKnob {7 falloff l Falloff R 0 100}
  falloff 5
 }
 NoOp {
  inputs 0
  name Trans_COPY1_proxy
  label static
  xpos 290
  ypos 632
  addUserKnob {20 User}
  addUserKnob {12 translate1}
  translate1 {140 0}
  addUserKnob {7 rotate1 R -180 180}
  rotate1 4
  addUserKnob {14 scale1 R 0 100}
  scale1 1
  addUserKnob {7 skewX1 R -1 1}
  addUserKnob {7 skewY1 R -1 1}
  addUserKnob {4 skeworder1 M {XY YX}}
  addUserKnob {12 center1}
  center1 {0 0}
  addUserKnob {6 invert1 +STARTLINE}
  addUserKnob {4 filter1 M {Impulse Cubic Keys Simon Rifman Mitchell Parzen Notsch Lanczos4 Lanczos6 Sinc4}}
  filter1 Cubic
 }
 Input {
  inputs 0
  name Input
  label static
  xpos 510
  ypos 56
 }
 Remove {
  name Remove
  label static
  xpos 510
  ypos 169
 }
 Flare {
  position {926 394}
  radius {100 {radius.0} {100+parent.proxy1.falloff}}
  size_mult 0.5
  ring_color {1 1 1}
  inner_color {1 1 1}
  outer_falloff {1 1 1}
  inner_falloff {1 1 1}
  brightness {1 1 1}
  vis_out 1
  flattening 3
  sharpness 1
  corners_angle 0.1
  mult_offset 0
  name Flare
  label static
  xpos 510
  ypos 248
 }
 Shuffle {
  alpha red
  name Shuffle1
  label static
  xpos 510
  ypos 320
 }
 Clamp {
  name Clamp
  label static
  xpos 510
  ypos 385
 }
 Grade {
  name Grade
  label static
  xpos 510
  ypos 464
 }
set N57245500 [stack 0]
push $N57245500
 Transform {
  translate {{Trans_COPY1_proxy.translate1} {Trans_COPY1_proxy.translate1}}
  rotate {{Trans_COPY1_proxy.rotate1}}
  scale {{Trans_COPY1_proxy.scale1} {Trans_COPY1_proxy.scale1}}
  skewX {{Trans_COPY1_proxy.skewX1}}
  skewY {{Trans_COPY1_proxy.skewY1}}
  skew_order {{Trans_COPY1_proxy.skeworder1}}
  center {{"Flare.position - translate.x + Trans_COPY1_proxy.center1.x"} {"Flare.position- translate.y +  + Trans_COPY1_proxy.center1.y"}}
  invert_matrix {{Trans_COPY1_proxy.invert1}}
  filter {{Trans_COPY1_proxy.filter1}}
  shutteroffset centred
  name Trans_COPY1
  label static
  xpos 400
  ypos 632
 }
 Switch {
  inputs 2
  which {{!apply_on_copy1}}
  name Switch1
  label static
  xpos 510
  ypos 632
 }
 Dot {
  name Dot1
  xpos 544
  ypos 670
 }
 NoOp {
  name COPIES1_end
  label static
  selected true
  xpos 510
  ypos 1952
 }
 Output {
  name Output1
  label static
  xpos 510
  ypos 2096
 }
end_group
